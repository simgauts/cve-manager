from app import db
from app.models.product import Product
from app.forms.product import EditProductForm
from flask import current_app, Blueprint, render_template, request, flash, redirect, url_for
from flask_login import login_required

product_bp = Blueprint("product", __name__, url_prefix="/product")


@product_bp.route("/", methods=["GET"])
@login_required
def index():
    page = request.args.get("page", 1, type=int)
    products = db.session.query(Product)
    products = products.paginate(page, current_app.config["POSTS_PER_PAGE"], False).items
    products = Product.query.paginate(page, current_app.config["POSTS_PER_PAGE"], False)
    next_url = url_for("product", page=products.next_num) \
        if products.has_next else None
    prev_url = url_for("home", page=products.prev_num) \
        if products.has_prev else None
    return render_template("products.html", title="Products", products=products.items,
                            next_url=next_url, prev_url=prev_url)


@product_bp.route("/edit", methods=["GET", "POST"])
@product_bp.route("/edit/<int:id>", methods=["GET", "POST"])
@login_required
def edit(id=None):
    form = EditProductForm()
    if form.validate_on_submit():
        if id is None:
            product = Product(
                name=form.name.data,
                description=form.description.data
            )
            db.session.add(product)
        else:
            product = Product.query.get(id)
            product.name = form.name.data
            product.description = form.description.data

        db.session.commit()
        flash("Your changes have been saved.")
        return redirect(url_for("product.index"))
    elif request.method == "GET":
        if id is not None:
            product = Product.query.get(id)
            if product is not None:
                form.name.data = product.name
                form.description.data = product.description                
    return render_template("edit_product.html", title="Add Product",
                           form=form)
